apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.appname }}
  namespace: {{ .Values.argocd.namespace }}
spec:
  syncPolicy:
    automated: {}
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
  project: {{ .Values.project }}
  destination:
    server: {{ .Values.cluster.address }}
    namespace: {{ .Values.cluster.namespace }}
  sources:
  - repoURL: {{ .Values.values.repo_URL }}
    targetRevision: {{ .Values.values.branch }}
    ref: values
  - repoURL: {{ .Values.postgresql.repo_URL }}
    targetRevision: {{ .Values.postgresql.targetRevision }}
    chart: {{ .Values.postgresql.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.postgresql.valueFiles }}
        - $values/app-values/Postgresql/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.postgresql.nameOverride }}
        {{- if .Values.postgresql.primary }}
        primary: {{- toYaml .Values.postgresql.primary | nindent 10 }}
        {{- end }}
  - repoURL: {{ .Values.keycloak.repo_URL }}
    targetRevision: {{ .Values.keycloak.targetRevision }}
    chart: {{ .Values.keycloak.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.keycloak.valueFiles }}
        - $values/app-values/Keycloak/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.keycloak.nameOverride }}
        apiUrl: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        externalDatabase:
          host: "postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local"
        extraEnvVars:
        - name: KC_HOSTNAME_ADMIN
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KC_HOSTNAME
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: USERS_ROLES_BASE_URL
          value: "http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080"
        - name: KEYCLOAK_BASE_URL
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: REALM
          value: "participant"
        - name: KEYCLOAK_EXTRA_ARGS
          value: --import-realm
        {{- if .Values.keycloak.resourcesPreset }}
        resourcesPreset: {{ .Values.keycloak.resourcesPreset }}
        {{- end }}
        {{- if .Values.keycloak.resources }}
        resources: {{- toYaml .Values.keycloak.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sdtooling_api_be.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sdtooling_api_be.targetRevision }}
    chart: {{ .Values.sdtooling_api_be.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sdtooling_api_be.valueFiles }}
        - $values/app-values/sdtooling-api-be/{{ . }}
        {{- end }}
      values: |
        domain: {{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        apiUrl: https://creation-wizard-api.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        validation:
          config:
            domain: http://sd-creation-wizard-api-validation.{{ .Values.cluster.namespace }}.svc.cluster.local
      releaseName: {{ .Values.sdtooling_api_be.nameOverride }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sdtooling_validation_api_be.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sdtooling_validation_api_be.targetRevision }}
    chart: {{ .Values.sdtooling_validation_api_be.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sdtooling_validation_api_be.valueFiles }}
        - $values/app-values/sdtooling-validation-api-be/{{ . }}
        {{- end }}
      releaseName: {{ .Values.sdtooling_validation_api_be.nameOverride }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.xsfc_advsearch_be.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.xsfc_advsearch_be.targetRevision }}
    chart: {{ .Values.xsfc_advsearch_be.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.xsfc_advsearch_be.valueFiles }}
        - $values/app-values/xsfc-advsearch-be/{{ . }}
        {{- end }}
      values: |
        domain: {{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        usersRoles:
          apiUrl: https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/user-api
        participant:
        onboarding:
          authorityTLSUri: "tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        catalogueAdapter:
          tier2Gateway:
            # URI to the tier2 tls gateway of the catalog adapter application
            uri: "https://tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        participant:
          onboarding:
            # onboarding credential certificate password
            credentialPassword: authority
      releaseName: {{ .Values.xsfc_advsearch_be.nameOverride }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.signer.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.signer.targetRevision }}
    chart: {{ .Values.signer.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.signer.valueFiles }}
        - $values/app-values/Signer/{{ . }}
        {{- end }}
      values: |
        serviceAccount:
          name: "{{ .Values.signer.serviceAccountName }}"
        ingress:
          frontendDomain: signer.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        secretEngine: {{ .Values.secretEngine }}
        hashicorp:
          service: {{ .Values.hashicorp.service }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_catalogue_client.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_catalogue_client.targetRevision }}
    chart: {{ .Values.simpl_catalogue_client.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_catalogue_client.valueFiles }}
        - $values/app-values/Simpl-catalogue-client/{{ . }}
        {{- end }}
      values: |
        env:
          PUBLIC_AUTH_KEYCLOAK_SERVER_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
          PUBLIC_AUTH_KEYCLOAK_REALM: "participant"
          PUBLIC_AUTH_KEYCLOAK_CLIENT_ID: "frontend-cli"
          PUBLIC_FC_DATA_URL: "https://xsfc-server-service.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
          PUBLIC_SEARCH_API_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/xfsc-advsearch-be"
        ingress:
          hosts:
            - host: catalogue-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
              - path: /
                pathType: ImplementationSpecific
          tls:
            - secretName: catalogue-ui-tld-secret
              hosts:
                - catalogue-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        {{- if .Values.simpl_catalogue_client.resources }}
        resources: {{- toYaml .Values.simpl_catalogue_client.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_cloud_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_cloud_gateway.targetRevision }}
    chart: {{ .Values.simpl_cloud_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_cloud_gateway.valueFiles }}
        - $values/app-values/Simpl-Cloud-Gateway/{{ . }}
        {{- end }}
      values: |
        global:
          hostBe: participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostTls: tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          authorityUrl: https://authority.be.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}
          cors:
            allowOrigin: https://participant.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
        usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        appConfig:
          spring:
            cloud:
              gateway:
                routes: 
                  - id: contract-consumption-be
                    uri: http://contract-consumption-be.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/contract-consumption/**
                    filters:
                      - StripPrefix=1
                  - id: sdtooling-wizard-be
                    uri: http://sdtool-be-creation-wizard-api.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/sdtooling-api/**
                    filters:
                      - StripPrefix=1
                  - id: xsfc-advsearch-be
                    uri: http://xsfc-advsearch-be.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/xsfc-advsearch-be/**
                    filters:
                      - StripPrefix=1
                  - id: signer
                    uri: http://signer.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/signer/**
                    filters:
                      - StripPrefix=1
        {{- if .Values.simpl_cloud_gateway.resources }}
        resources: {{- toYaml .Values.simpl_cloud_gateway.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.users_roles.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.users_roles.targetRevision }}
    chart: {{ .Values.users_roles.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.users_roles.valueFiles }}
        - $values/app-values/Users-Roles/{{ . }}
        {{- end }}
      values: |
        global:
          hostBe: participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostTls: tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/usersroles"
        redis:
          host: "redis-master.{{ .Values.cluster.namespace }}.svc.cluster.local"
        microservices:
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        {{- if .Values.users_roles.resources }}
        resources: {{- toYaml .Values.users_roles.resources | nindent 10 }}
        {{- end }}
  - repoURL: {{ .Values.redis.repo_URL }}
    targetRevision: {{ .Values.redis.targetRevision }}
    chart: {{ .Values.redis.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.redis.valueFiles }}
        - $values/app-values/Redis/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.redis.nameOverride }}
        {{- if .Values.redis.master }}
        master: {{- toYaml .Values.redis.master | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_fe.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_fe.targetRevision }}
    chart: {{ .Values.simpl_fe.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_fe.valueFiles }}
        - $values/app-values/Simpl-fe/{{ . }}
        {{- end }}
      values: |
        hostFe: participant.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        cors:
          allowOrigin: https://participant.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:4203,http://localhost:3000
        env:
        - name: API_URL
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        - name: KEYCLOAK_URL
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KEYCLOAK_REALM
          value: "participant"
        - name: KEYCLOAK_CLIENT_ID
          value: "frontend-cli"
        {{- if .Values.simpl_fe.resources }}
        resources: {{- toYaml .Values.simpl_fe.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.tls_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.tls_gateway.targetRevision }}
    chart: {{ .Values.tls_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.tls_gateway.valueFiles }}
        - $values/app-values/tls-gateway/{{ . }}
        {{- end }}
      values: |
        global:
          cors:
            allowOrigin: https://authority.fe.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        redis:
          host: "redis-master.{{ .Release.Namespace }}.svc.cluster.local"
        hostT2: "tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        authorityUrlT1: "https://authority.be.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        {{- if .Values.tls_gateway.resources }}
        resources: {{- toYaml .Values.tls_gateway.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_edc.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_edc.targetRevision }}
    chart: {{ .Values.simpl_edc.chart_name }}
    helm:
      releaseName: {{ .Values.simpl_edc.nameOverride }}
      valueFiles:
        {{- range .Values.simpl_edc.valueFiles }}
        - $values/app-values/simpl-edc/{{ . }}
        {{- end }}
      values: |
        ingress:
          host: edc.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        deployment:
          vault:
            url: {{ .Values.hashicorp.service }}
        postgresql:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/edc"
          policyUrl: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/edc"
        {{- if .Values.simpl_edc.resources }}
        resources: {{- toYaml .Values.simpl_edc.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.auth_provider.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.auth_provider.targetRevision }}
    chart: {{ .Values.auth_provider.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.auth_provider.valueFiles }}
        - $values/app-values/auth-provider/{{ . }}
        {{- end }}
      values: |
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/authenticationprovider"
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        simpl:
          certificate:
            san: "tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        {{- if .Values.auth_provider.resources }}
        resources: {{- toYaml .Values.auth_provider.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sd_ui.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sd_ui.targetRevision }}
    chart: {{ .Values.sd_ui.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sd_ui.valueFiles }}
        - $values/app-values/simpl-sd-ui/{{ . }}
        {{- end }}
      values: |
        ingress:
          hosts:
            - host: sd-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
              - path: /
                pathType: ImplementationSpecific
          tls:
            - secretName: sd-ui-tld-secret
              hosts:
                - sd-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        env:
          PUBLIC_AUTH_KEYCLOAK_SERVER_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
          PUBLIC_AUTH_KEYCLOAK_REALM: "participant"
          PUBLIC_AUTH_KEYCLOAK_CLIENT_ID: "frontend-cli"
          PUBLIC_CREATION_WIZARD_API_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/sdtooling-api"
          PUBLIC_SIGNER_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
  {{- if .Values.monitoring.enabled }}
  - repoURL: {{ .Values.monitoring.operator.repo_URL }}
    targetRevision: {{ .Values.monitoring.operator.targetRevision }}
    chart: {{ .Values.monitoring.operator.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.monitoring.operator.valueFiles }}
        - $values/app-values/monitoring-operator/{{ . }}
        {{- end }}
      values: |
        managedNamespaces: [{{ .Values.cluster.namespace }}]
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.monitoring.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.monitoring.targetRevision }}
    chart: {{ .Values.monitoring.chart_name }}
    helm:
      releaseName: {{ .Values.monitoring.fullnameOverride }}
      valueFiles:
        {{- range .Values.monitoring.valueFiles }}
        - $values/app-values/monitoring/{{ . }}
        {{- end }}
      values: |
        domainSuffix: {{ .Values.domainSuffix }}
        namespaceTag: {{ .Values.namespaceTag }}
        metricbeat:
          kubeStateHost: {{ .Values.cluster.kubeStateHost }}
        heartbeat:
          services:
            heartbeat.monitors:
            - type: tcp
              name: Elasticsearch Service
              id: elasticsearch:9200
              schedule: '@every 5s'
              hosts: ["elastic-elasticsearch-es-http.{{ .Values.cluster.namespace }}.svc:9200"]
            - type: tcp
              name: Kibana GUI
              id: kibana:443
              schedule: '@every 5s'
              hosts: ["kibana.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}:443"]
            - type: icmp
              id: kibana/icmp
              name: Kibana ICMP
              hosts: ["elastic-kibana-kb-http.{{ .Values.cluster.namespace }}.svc"]
              schedule: '*/5 * * * * * *'
  {{- end }}