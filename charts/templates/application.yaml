apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.appname }}
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  syncPolicy:
    automated: {}
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
  project: {{ .Values.project }}
  destination:
    server: {{ .Values.cluster.address }}
    namespace: {{ .Values.cluster.namespace }}
  sources:
  - repoURL: {{ .Values.values.repo_URL }}
    targetRevision: {{ .Values.values.branch }}
    ref: values
  - repoURL: {{ .Values.keycloak.repo_URL }}
    targetRevision: {{ .Values.keycloak.targetRevision }}
    chart: {{ .Values.keycloak.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.keycloak.valueFiles }}
        - $values/app-values/Keycloak/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.keycloak.nameOverride }}
        apiUrl: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: {{ .Values.hashicorp.service }}
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        auth:
          adminPassword: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-keycloak#admin
        externalDatabase:
          host: "pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          database: {{ .Values.cluster.namespace }}_keycloak
          user: {{ .Values.cluster.namespace }}_keycloak
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-keycloak
        extraEnvVars:
        - name: KC_HOSTNAME_ADMIN
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KC_HOSTNAME
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: USERS_ROLES_BASE_URL
          value: "http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080"
        - name: KEYCLOAK_BASE_URL
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: REALM
          value: "participant"
        - name: KEYCLOAK_EXTRA_ARGS
          value: --import-realm
        {{- if .Values.keycloak.resourcesPreset }}
        resourcesPreset: {{ .Values.keycloak.resourcesPreset }}
        {{- end }}
        {{- if .Values.keycloak.resources }}
        resources: {{- toYaml .Values.keycloak.resources | nindent 10 }}
        {{- end }}
  {{- if .Values.sdtooling_api_be.enabled }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sdtooling_api_be.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sdtooling_api_be.targetRevision }}
    chart: {{ .Values.sdtooling_api_be.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sdtooling_api_be.valueFiles }}
        - $values/app-values/sdtooling-api-be/{{ . }}
        {{- end }}
      values: |
        domain: {{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        apiUrl: https://creation-wizard-api.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        validation:
          config:
            domain: http://sd-creation-wizard-api-validation.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        edcConnector:
          baseUrl: https://edc.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          tier2BaseUrl: https://tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/edc
        usersRoles:
          apiUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        federatedCatalogue:
          tier2Gateway:
            uri: "https://tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        participant:
          onboarding:
            authorityTLSUri: "https://tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        openapiConfig:
          servers: https://creation-wizard-api.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        hash:
          config:
            algorithm: "SHA256"
            templates: '[
                          {
                            "key": "Contract Template 1",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/contract/ContractTemplate1.json"
                          },
                          {
                            "key": "Contract Template 2",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/contract/ContractTemplate2.json"
                          },
                          {
                            "key": "Contract Template 3",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/contract/ContractTemplate3.json"
                          },
                          {
                            "key": "Billing Schema 1",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/pdf/BillingSchema1.pdf"
                          },
                          {
                            "key": "Billing Schema 2",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/pdf/BillingSchema2.pdf"
                          },
                          {
                            "key": "Billing Schema 3",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/pdf/BillingSchema1.pdf"
                          },
                          {
                            "key": "Sla Agreements 1",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/pdf/SLAAgreement1.pdf"
                          },
                          {
                            "key": "Sla Agreements 2",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/pdf/SLAAgreement2.pdf"
                          },
                          {
                            "key": "Sla Agreements 3",
                            "value": "https://files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/static/pdf/SLAAgreement1.pdf"
                          }
                        ]'
      releaseName: {{ .Values.sdtooling_api_be.nameOverride }}
  {{- end }}    
  {{- if .Values.sdtooling_validation_api_be.enabled }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sdtooling_validation_api_be.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sdtooling_validation_api_be.targetRevision }}
    chart: {{ .Values.sdtooling_validation_api_be.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sdtooling_validation_api_be.valueFiles }}
        - $values/app-values/sdtooling-validation-api-be/{{ . }}
        {{- end }}
      releaseName: {{ .Values.sdtooling_validation_api_be.nameOverride }}
  {{- end }}    
  {{- if .Values.xfsc_advsearch_be.enabled }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.xfsc_advsearch_be.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.xfsc_advsearch_be.targetRevision }}
    chart: {{ .Values.xfsc_advsearch_be.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.xfsc_advsearch_be.valueFiles }}
        - $values/app-values/xfsc-advsearch-be/{{ . }}
        {{- end }}
      values: |
        domain: {{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        usersRoles:
          apiUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        catalogueAdapter:
          tier2Gateway:
            uri: "https://tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        federatedCatalogue:
          tier2Gateway:
            uri: "https://tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        participant:
          onboarding:
            authorityTLSUri: "https://tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
      releaseName: {{ .Values.xfsc_advsearch_be.nameOverride }}
  {{- end }}    
  {{- if .Values.signer.enabled }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.signer.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.signer.targetRevision }}
    chart: {{ .Values.signer.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.signer.valueFiles }}
        - $values/app-values/Signer/{{ . }}
        {{- end }}
      values: |
        serviceAccount:
          name: "{{ .Values.signer.serviceAccountName }}"
        ingress:
          frontendDomain: signer.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          annotations:
            cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
        hashicorp:
          service: {{ .Values.hashicorp.service }}
          role: {{ .Values.hashicorp.role }}
          secretEngine: {{ .Values.hashicorp.secretEngine }}
  {{- end }}    
  {{- if .Values.simpl_catalogue_client.enabled }}    
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_catalogue_client.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_catalogue_client.targetRevision }}
    chart: {{ .Values.simpl_catalogue_client.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_catalogue_client.valueFiles }}
        - $values/app-values/Simpl-catalogue-client/{{ . }}
        {{- end }}
      values: |
        env:
          PUBLIC_AUTH_KEYCLOAK_SERVER_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
          PUBLIC_FC_DATA_URL: "https://xsfc-server-service.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
          PUBLIC_SEARCH_API_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/xfsc-advsearch-be"
          PUBLIC_CONTRACT_CONSUMPTION_API_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/contract-consumption"
        ingress:
          hosts:
            - host: catalogue-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
              - path: /
                pathType: ImplementationSpecific
          tls:
            - secretName: catalogue-ui-tld-secret
              hosts:
                - catalogue-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          annotations:
            cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
        {{- if .Values.simpl_catalogue_client.resources }}
        resources: {{- toYaml .Values.simpl_catalogue_client.resources | nindent 10 }}
        {{- end }}
  {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.tier1_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.tier1_gateway.targetRevision }}
    chart: {{ .Values.tier1_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.tier1_gateway.valueFiles }}
        - $values/app-values/tier1-gateway/{{ . }}
        {{- end }}
      values: |
        hostT1: participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}  
        cors:
          allowOrigin: https://participant.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        ingress:
          issuer: {{ .Values.cluster.issuer }}
        keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
        usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        appConfig:
          spring:
            cloud:
              gateway:
                routes:
                  - id: keycloak
                    uri: ${keycloak.url}
                    predicates:
                      - Path=/auth/**
                    filters:
                      - StripPrefix=1
                  - id: users-roles
                    uri: ${users-roles.url}
                    predicates:
                      - Path=/user-api/**
                    filters:
                      - StripPrefix=1
                  - id: authentication-provider
                    uri: ${authentication-provider.url}
                    predicates:
                      - Path=/auth-api/**
                    filters:
                      - StripPrefix=1
                  - id: authentication-providerV1
                    uri: ${authentication-provider.url}
                    predicates:
                      - Path=/authApi/**
                    filters:
                      - StripPrefix=1
                  - id: contract-consumption-be
                    uri: http://contract-consumption-be.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/contract-consumption/**
                    filters:
                      - StripPrefix=1
                  - id: sdtooling-wizard-be
                    uri: http://sd-creation-wizard-api.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/sdtooling-api/**
                    filters:
                      - StripPrefix=1
                  - id: xfsc-advsearch-be
                    uri: http://xfsc-advsearch-be.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/xfsc-advsearch-be/**
                    filters:
                      - StripPrefix=1
                  # CLI configurations
                  - id: cli-authentication-providerV1
                    uri: ${authentication-provider.url}
                    predicates:
                      - Path=
                        /cli/authApi/v1/csr/generate,
                        /cli/authApi/v1/keypairs/generate,
                        /cli/authApi/v1/keypairs,
                        /cli/authApi/v1/credentials,
                        /cli/authApi/v1/credentials/download,
                        /cli/authApi/v1/agent/ping
                    filters:
                      - StripPrefix=2
                      - name: ClientCredentialsFilter
                        args:
                          # Here you specify the clientid and the required client role to invoke this api
                          # in the following order: 
                          # client-id-name: client-role-1, client-role-1
                          # The default configuration is shown below.
                          cli: cli-role
                  - id: cli-users-and-rolesV1
                    uri: ${users-roles.url}
                    predicates:
                      - Path=
                        /cli/userApi/v1/users/import,
                        /cli/userApi/v1/roles/import,
                        /cli/userApi/v1/roles/*/identityAttributes
                    filters:
                      - StripPrefix=2
                      - name: ClientCredentialsFilter
                        args:
                          # Here you specify the clientid and the required client role to invoke this api
                          # in the following order: 
                          # client-id-name: client-role-1, client-role-1
                          # The default configuration is shown below.
                          cli: cli-role                  
                  - id: signer
                    uri: http://signer.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
                    predicates:
                      - Path=/signer/**
                    filters:
                      - StripPrefix=1
        {{- if .Values.tier1_gateway.resources }}
        resources: {{- toYaml .Values.tier1_gateway.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.users_roles.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.users_roles.targetRevision }}
    chart: {{ .Values.users_roles.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.users_roles.valueFiles }}
        - $values/app-values/Users-Roles/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: {{ .Values.hashicorp.service }}
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        hostT1: participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        authorityHostT2: tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}
        global:
          ingress:
            issuer: {{ .Values.cluster.issuer }}
        keycloak:
          master:
            password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-keycloak#admin
        db:
          url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_usersroles"
          username: {{ .Values.cluster.namespace }}_usersroles
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-usersroles
        env:
        - name: KAFKA_USERSROLES
          value: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-kafka-credentials#{{ .Values.cluster.namespace }}_usersroles"
        redis:
          host: "redis-master.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        microservices:
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              consumer:
                group-id: users-roles
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.cluster.namespace }}_usersroles" password="${KAFKA_USERSROLES}";
              admin:
                auto-create: true
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Values.cluster.namespace }}.
              inbox:
                topic:
                  pattern: iaa\.{{ .Values.cluster.namespace }}\..*
        {{- if .Values.users_roles.resources }}
        resources: {{- toYaml .Values.users_roles.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_fe.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_fe.targetRevision }}
    chart: {{ .Values.simpl_fe.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_fe.valueFiles }}
        - $values/app-values/Simpl-fe/{{ . }}
        {{- end }}
      values: |
        ingress:
          issuer: {{ .Values.cluster.issuer }}
        hostFe: participant.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        cors:
          allowOrigin: https://participant.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:4203,http://localhost:3000
        env:
        - name: API_URL
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        - name: KEYCLOAK_URL
          value: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KEYCLOAK_REALM
          value: "participant"
        - name: KEYCLOAK_CLIENT_ID
          value: "frontend-cli"
        {{- if .Values.simpl_fe.resources }}
        resources: {{- toYaml .Values.simpl_fe.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.tier2_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.tier2_gateway.targetRevision }}
    chart: {{ .Values.tier2_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.tier2_gateway.valueFiles }}
        - $values/app-values/tier2-gateway/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: {{ .Values.hashicorp.service }}
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        env:
        - name: KAFKA_TIER2GW
          value: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-kafka-credentials#{{ .Values.cluster.namespace }}_tier2gw"
        global:
          cors:
            allowOrigin: https://authority.fe.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        redis:
          host: "redis-master.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        kafka:
          bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092   
        hostT2: "tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        authorityUrlT1: "https://authority.be.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        appConfig:
          spring:
            cloud:
              gateway:
                routes:
                  - id: edc
                    uri: http://simpl-edc-service.{{ .Values.cluster.namespace }}.svc.cluster.local:19194
                    predicates:
                      - Path=/edc/**
                    filters:
                      - StripPrefix=1
                  - id: user-roles
                    uri: ${users-roles.url}
                    predicates:
                      - Path=/user-api/mtls/**
                    filters:
                      - StripPrefix=1
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              consumer:
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.cluster.namespace }}_tier2gw" password="${KAFKA_TIER2GW}";
              admin:
                auto-create: true
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Values.cluster.namespace }}.
        {{- if .Values.tier2_gateway.resources }}
        resources: {{- toYaml .Values.tier2_gateway.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.auth_provider.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.auth_provider.targetRevision }}
    chart: {{ .Values.auth_provider.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.auth_provider.valueFiles }}
        - $values/app-values/auth-provider/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: {{ .Values.hashicorp.service }}
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        urlAuthorityT2: "https://tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
        db:
          url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_authenticationprovider"
          username: {{ .Values.cluster.namespace }}_authenticationprovider
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-authenticationprovider
        env:
        - name: KAFKA_AUTHPROVIDER
          value: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-kafka-credentials#{{ .Values.cluster.namespace }}_authprovider"
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        simpl:
          certificate:
            san: "tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        redis:
          host: "redis-master.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              producer:
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.cluster.namespace }}_authprovider" password="${KAFKA_AUTHPROVIDER}";
              admin:
                auto-create: true
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Values.cluster.namespace }}.
        {{- if .Values.auth_provider.resources }}
        resources: {{- toYaml .Values.auth_provider.resources | nindent 10 }}
        {{- end }}
  {{- if .Values.sd_ui.enabled }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sd_ui.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sd_ui.targetRevision }}
    chart: {{ .Values.sd_ui.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sd_ui.valueFiles }}
        - $values/app-values/simpl-sd-ui/{{ . }}
        {{- end }}
      values: |
        ingress:
          hosts:
            - host: sd-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
              - path: /
                pathType: ImplementationSpecific
          tls:
            - secretName: sd-ui-tld-secret
              hosts:
                - sd-ui.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          annotations:
            cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
        env:
          PUBLIC_AUTH_KEYCLOAK_SERVER_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
          PUBLIC_AUTH_KEYCLOAK_REALM: "participant"
          PUBLIC_AUTH_KEYCLOAK_CLIENT_ID: "frontend-cli"
          PUBLIC_CREATION_WIZARD_API_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/sdtooling-api"
          PUBLIC_SIGNER_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/signer"
  {{- end }}  
  {{- if .Values.simpl_edc.enabled }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_edc.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_edc.targetRevision }}
    chart: {{ .Values.simpl_edc.chart_name }}
    helm:
      releaseName: {{ .Values.simpl_edc.nameOverride }}
      valueFiles:
        {{- range .Values.simpl_edc.valueFiles }}
        - $values/app-values/simpl-edc/{{ . }}
        {{- end }}
      values: |
        ingress:
          host: edc.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        deployment:
          host: {{ .Values.simpl_edc.nameOverride }}-service
          vault:
            url: {{ .Values.hashicorp.service }}
          callbackAddress: "https://tls.participant.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/edc"
        env:
          datasourceurl: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_edc"
        postgresql:
          username: {{ .Values.cluster.namespace }}_edc
        tls:
          url:
            authority: "https://tls.authority.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}"
            usersRoles: "http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080/credential/download"
            authenticationProvider: "http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080/keypair"
        hashicorp:
          role: {{ .Values.hashicorp.role }}
          service: {{ .Values.hashicorp.service }}
        secretEngine: {{ .Values.hashicorp.secretEngine }}
        {{- if .Values.simpl_edc.resources }}
        resources: {{- toYaml .Values.simpl_edc.resources | nindent 10 }}
        {{- end }}
  {{- end }}      
  {{- if .Values.monitoring.enabled }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.monitoring.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.monitoring.targetRevision }}
    chart: {{ .Values.monitoring.chart_name }}
    helm:
      releaseName: {{ .Values.monitoring.fullnameOverride }}
      valueFiles:
        {{- range .Values.monitoring.valueFiles }}
        - $values/app-values/monitoring/{{ . }}
        {{- end }}
      values: |
        clusterIssuer: {{ .Values.cluster.issuer }}
        domainSuffix: {{ .Values.domainSuffix }}
        namespaceTag: {{ .Values.namespaceTag }}
        mainNamespace: {{ .Values.cluster.commonToolsNamespace }}
        heartbeat:
          services:
            heartbeat.monitors:
            - type: tcp
              name: Elasticsearch Service
              id: elasticsearch:9200
              schedule: '@every 5s'
              hosts: ["elastic-elasticsearch-es-http.{{ .Values.cluster.commonToolsNamespace }}.svc:9200"]
            - type: tcp
              name: Kibana GUI
              id: kibana:443
              schedule: '@every 5s'
              hosts: ["kibana.{{ .Values.cluster.commonToolsNamespace }}.{{ .Values.domainSuffix }}:443"]
            - type: icmp
              id: kibana/icmp
              name: Kibana ICMP
              hosts: ["elastic-kibana-kb-http.{{ .Values.cluster.commonToolsNamespace }}.svc"]
              schedule: '*/5 * * * * * *'
  {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.contract.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.contract.targetRevision }}
    chart: {{ .Values.contract.chart_name }}
    helm:
      releaseName: {{ .Values.contract.fullnameOverride }}
      valueFiles:
        {{- range .Values.contract.valueFiles }}
        - $values/app-values/contract/{{ . }}
        {{- end }}
      values: |
        deployment:
          db:
            url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_contract"
            user: {{ .Values.cluster.namespace }}_contract
          kafka:
            bootstrapServer: http://kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
            clientUser: {{ .Values.cluster.namespace }}-contract
          vault:
            hashicorp:
              service: {{ .Values.hashicorp.service }}
              secretEngine: {{ .Values.hashicorp.secretEngine }}
              role: {{ .Values.hashicorp.role }}
          {{- if .Values.contract.resources }}
          resources: {{- toYaml .Values.contract.resources | nindent 10 }}
          {{- end }} 
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.stubs.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.stubs.targetRevision }}
    chart: {{ .Values.stubs.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.stubs.valueFiles }}
        - $values/app-values/stubs/{{ . }}
        {{- end }}
  {{- if .Values.files.enabled }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.files.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.files.targetRevision }}
    chart: {{ .Values.files.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.files.valueFiles }}
        - $values/app-values/files/{{ . }}
        {{- end }}
      values: |
        ingress:
          hostname: files.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        {{- if .Values.files.resources }}
        resources: {{- toYaml .Values.files.resources | nindent 10 }}
        {{- end }}
      releaseName: {{ .Values.files.nameOverride }}
  {{- end }}    
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_cli.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_cli.targetRevision }}
    chart: {{ .Values.simpl_cli.chart_name }}
    helm:
      releaseName: {{ .Values.simpl_cli.fullnameOverride }}
      valueFiles:
        {{- range .Values.simpl_cli.valueFiles }}
        - $values/app-values/simpl-cli/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: {{ .Values.hashicorp.service }}
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        initParticipant:
          hostT1: participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          authorityHostT1: authority.be.{{ .Values.authority.namespaceTag }}.{{ .Values.domainSuffix }}
          csr:
            cn: tls.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
            o: {{ .Values.namespaceTag }}
            ou: {{ .Values.namespaceTag }}
          keycloak:
            internalHost: "keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local"
            url: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
            master:
              password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-keycloak#admin
            authority:
              password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.authority.namespaceTag }}-keycloak#admin
          microservices:
            usersRolesUrl: https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/cli/userApi/v1/
            authenticationProviderUrl: https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/cli/authApi/v1/
  {{- if .Values.crossplane.enabled }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.infrastructure_be.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.infrastructure_be.targetRevision }}
    chart: {{ .Values.infrastructure_be.chart_name }}
    helm:
      releaseName: {{ .Values.infrastructure_be.fullnameOverride }}
      valueFiles:
        {{- range .Values.infrastructure_be.valueFiles }}
        - $values/app-values/infrastructure-be/{{ . }}
        {{- end }}
      values: |
        namespace: {{ .Values.cluster.namespace }}
        backend:
          podAnnotations:
            vault.security.banzaicloud.io/vault-addr: {{ .Values.hashicorp.service }}
            vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
            vault.security.banzaicloud.io/vault-ignore-missing-secrets: "true"
          env:
            ALLOWED_ORIGINS: http://localhost:3001,https://{{ .Values.infrastructure_fe.fullnameOverride }}.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
            VAULT_TOKEN: vault:login
            SPRING_CLOUD_VAULT_TOKEN: "${VAULT_TOKEN}"
            SPRING_CLOUD_VAULT_URI: {{ .Values.hashicorp.service }}
            SPRING_CLOUD_VAULT_URL: {{ .Values.hashicorp.service }}/v1/{{ .Values.hashicorp.secretEngine }}/data/users/
            SPRING_DATASOURCE_URL: jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_infrabe
            SPRING_FLYWAY_URL: jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_infrabe
            SPRING_FLYWAY_USER: {{ .Values.cluster.namespace }}_infrabe
            SPRING_FLYWAY_PASSWORD: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-infrabe
            SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
            SPRING_CONFIG_IMPORT: "${SPRING_CONFIG_IMPORT_PREFIX}://{{ .Values.hashicorp.secretEngine }}/{{ .Values.cluster.namespace }}-infrastructure-be"
            SPRING_CONFIG_IMPORT_PREFIX: "vault"
            SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth/realms/participant
            GITEA_URL: "http://gitea-http.{{ .Values.cluster.namespace }}.svc.cluster.local:3000/api/v1"
            GITEA_USER: {{ .Values.crossplane.gitea.username }}
            GITEA_PASSWORD: {{ .Values.crossplane.gitea.password }}
          ingress:
            hosts:
              - host: {{ .Values.infrastructure_be.fullnameOverride }}.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
                paths:
                - path: /
                  pathType: ImplementationSpecific
            tls:
              - secretName: {{ .Values.infrastructure_be.fullnameOverride }}-tld-secret
                hosts:
                  - {{ .Values.infrastructure_be.fullnameOverride }}.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
            annotations:
              cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.infrastructure_fe.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.infrastructure_fe.targetRevision }}
    chart: {{ .Values.infrastructure_fe.chart_name }}
    helm:
      releaseName: {{ .Values.infrastructure_fe.fullnameOverride }}
      valueFiles:
        {{- range .Values.infrastructure_fe.valueFiles }}
        - $values/app-values/infrastructure-fe/{{ . }}
        {{- end }}      
      values: |
        namespace: {{ .Values.cluster.namespace }}
        env:
          VITE_API_BASE_URL: "https://{{ .Values.infrastructure_be.fullnameOverride }}.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
          VITE_PUBLIC_AUTH_KEYCLOAK_SERVER_URL: "https://participant.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
          VITE_PUBLIC_AUTH_KEYCLOAK_REALM: "participant"
          VITE_PUBLIC_AUTH_KEYCLOAK_CLIENT_ID: "frontend-cli"
        ingress:
          hosts:
            - host: {{ .Values.infrastructure_fe.fullnameOverride }}.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
              - path: /
                pathType: ImplementationSpecific
          tls:
            - secretName: {{ .Values.infrastructure_fe.fullnameOverride }}-tld-secret
              hosts:
                - {{ .Values.infrastructure_fe.fullnameOverride }}.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          annotations:
            cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.provisionerresources.projectID }}/packages/helm/stable"
    targetRevision: {{ .Values.provisionerresources.targetRevision }}
    chart: {{ .Values.provisionerresources.chart_name }}
    helm:
      releaseName: {{ .Values.provisionerresources.nameOverride }}
      valueFiles:
        {{- range .Values.provisionerresources.valueFiles }}
        - $values/app-values/provisioner-resources/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: {{ .Values.hashicorp.service }}
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        fullnameOverride: {{ .Values.provisionerresources.nameOverride }}
        kafkaEndpoint: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
        giteaUrl: gitea-http.{{ .Values.cluster.namespace }}.svc.cluster.local:3000
        secrets:
          ionos:
            token: {{ .Values.crossplane.ionos.token }}
          kafka:
            username: {{ .Values.crossplane.kafka.username }}
            password: {{ .Values.crossplane.kafka.password }}
          gitea:
            username: {{ .Values.crossplane.gitea.username }}
            password: {{ .Values.crossplane.gitea.password }}
  {{- end }}